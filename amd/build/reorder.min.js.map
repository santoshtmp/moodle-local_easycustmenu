{"version":3,"file":"reorder.min.js","sources":["../src/reorder.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module\n *\n * @copyright  2025 https://santoshmagar.com.np/\n * @author     santoshtmp7 https://github.com/santoshtmp/moodle-local_easycustmenu\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport $ from 'jquery';\nimport SortableList from 'core/sortable_list';\nimport Ajax from 'core/ajax';\n\n\nexport const init = (tableid) => {\n    //\n    let elementSelector = '#' + tableid + ' tbody[data-action=\"reorder\"]';\n\n    // Initialise SortableList for drag-and-drop.\n    new SortableList(\n        elementSelector,\n        {\n            targetListSelector: null,\n            moveHandlerSelector: '[data-drag-type=move]',\n            isHorizontal: false,\n            autoScroll: true\n        }\n    );\n    // Handle drag-and-drop depth changes.\n    $(elementSelector).on(SortableList.EVENTS.DROP, function (evt, info) {\n        let element = info.element;\n        let end_x = info.endX;\n        let start_x = info.startX;\n        let positionChanged = info.positionChanged;\n        let itemDepth = parseInt(element.attr('data-depth')) || 0;\n        let new_itemDepth = itemDepth;\n        let prevElement = element.prev();\n        let prevElementDepth = parseInt(prevElement.attr('data-depth')) || 0;\n\n        // Log sourceList contents for debugging\n        // let sourceList = info.sourceList;\n        // $('.sourceList').html($(info.sourceList).html());\n        // $('.targetList').html($(info.targetList).html());\n        // window.console.log('sourceList contents:', $(sourceList).html());\n        // window.console.log('sourceList tr elements:', $(sourceList).find('tr').length);\n        // window.console.log('sourceList : ' + info.sourceList.index(element));\n        // window.console.log('targetList : ' + info.targetList);\n\n        // Prevent from moving first depth 0 item to more deep\n\n        // Only adjust depth for significant horizontal movement\n        if (positionChanged) {\n            let elementIndex = $(elementSelector + ' tr').index(element);\n            let targetNextElementDepth = parseInt(info.targetNextElement.attr('data-depth')) || 0;\n            new_itemDepth = (elementIndex == 0) ? 0 : Math.max(prevElementDepth, targetNextElementDepth);\n        } else {\n            if (prevElement.length) {\n                if (end_x > start_x + 30) {\n                    new_itemDepth = Math.min(itemDepth + 1, prevElementDepth + 1);\n                } else if (end_x < start_x - 30) {\n                    new_itemDepth = Math.max(0, itemDepth - 1);\n                }\n            }\n        }\n\n        // Update element depth and indentation only if depth changed\n        if (new_itemDepth !== itemDepth) {\n            element.attr('data-depth', new_itemDepth);\n            let indentation = element.find('.indentation');\n            indentation.css({\n                'width': (30 * new_itemDepth) + 'px'\n            });\n        }\n\n        // Show save button after reordering\n        $('#save_menu_reorder').show();\n\n        // ===============\n\n    });\n\n    // save the order of menu items\n    $('#save_menu_reorder').on('click', function () {\n        // Disable to prevent multiple clicks\n        let saveBtn = $(this);\n        saveBtn.prop('disabled', true);\n\n        let reorder_items = {};\n        let depthStack = {}; // Stores the last seen ID for each depth level\n\n        $(elementSelector + ' tr').each(function (index) {\n            let id = parseInt($(this).attr('data-id'));\n            let depth = parseInt($(this).attr('data-depth'));\n\n            // Store the last seen item at this depth\n            depthStack[depth] = id;\n\n            // Determine parent\n            let parent = 0;\n            if (depth > 0) {\n                parent = depthStack[depth - 1] || 0;\n            }\n\n            $(this).attr('data-parent', parent);\n            reorder_items[id] = {\n                menu_order: index,\n                id: id,\n                depth: depth,\n                parent: parent,\n            };\n        });\n\n        // AJAX request to save the order\n        let request = {\n            methodname: 'local_easycustmenu_save_menu_order',\n            args: {\n                items: reorder_items,\n            }\n        };\n\n        let ajax = Ajax.call([request])[0];\n        ajax.done(function (response) {\n            if (response.status) {\n                window.console.log('Menu order saved successfully.');\n                $('#save_menu_reorder').hide();\n            } else {\n                window.console.log('Error saving menu order:', response.message);\n            }\n        });\n        ajax.fail(function () {\n            window.console.log('request failed.');\n        });\n        ajax.always(function () {\n            saveBtn.prop('disabled', false);\n        });\n\n\n    });\n\n};\n"],"names":["tableid","elementSelector","SortableList","targetListSelector","moveHandlerSelector","isHorizontal","autoScroll","on","EVENTS","DROP","evt","info","element","end_x","endX","start_x","startX","positionChanged","itemDepth","parseInt","attr","new_itemDepth","prevElement","prev","prevElementDepth","elementIndex","index","targetNextElementDepth","targetNextElement","Math","max","length","min","find","css","show","saveBtn","this","prop","reorder_items","depthStack","each","id","depth","parent","menu_order","request","methodname","args","items","ajax","Ajax","call","done","response","status","window","console","log","hide","message","fail","always"],"mappings":";;;;;;;;kOA6BqBA,cAEbC,gBAAkB,IAAMD,QAAU,oCAGlCE,uBACAD,gBACA,CACIE,mBAAoB,KACpBC,oBAAqB,wBACrBC,cAAc,EACdC,YAAY,wBAIlBL,iBAAiBM,GAAGL,uBAAaM,OAAOC,MAAM,SAAUC,IAAKC,UACvDC,QAAUD,KAAKC,QACfC,MAAQF,KAAKG,KACbC,QAAUJ,KAAKK,OACfC,gBAAkBN,KAAKM,gBACvBC,UAAYC,SAASP,QAAQQ,KAAK,gBAAkB,EACpDC,cAAgBH,UAChBI,YAAcV,QAAQW,OACtBC,iBAAmBL,SAASG,YAAYF,KAAK,gBAAkB,KAc/DH,gBAAiB,KACbQ,cAAe,mBAAExB,gBAAkB,OAAOyB,MAAMd,SAChDe,uBAAyBR,SAASR,KAAKiB,kBAAkBR,KAAK,gBAAkB,EACpFC,cAAiC,GAAhBI,aAAqB,EAAII,KAAKC,IAAIN,iBAAkBG,6BAEjEL,YAAYS,SACRlB,MAAQE,QAAU,GAClBM,cAAgBQ,KAAKG,IAAId,UAAY,EAAGM,iBAAmB,GACpDX,MAAQE,QAAU,KACzBM,cAAgBQ,KAAKC,IAAI,EAAGZ,UAAY,QAMhDG,gBAAkBH,UAAW,CAC7BN,QAAQQ,KAAK,aAAcC,eACTT,QAAQqB,KAAK,gBACnBC,IAAI,OACF,GAAKb,cAAiB,2BAKtC,sBAAsBc,8BAO1B,sBAAsB5B,GAAG,SAAS,eAE5B6B,SAAU,mBAAEC,MAChBD,QAAQE,KAAK,YAAY,OAErBC,cAAgB,GAChBC,WAAa,uBAEfvC,gBAAkB,OAAOwC,MAAK,SAAUf,WAClCgB,GAAKvB,UAAS,mBAAEkB,MAAMjB,KAAK,YAC3BuB,MAAQxB,UAAS,mBAAEkB,MAAMjB,KAAK,eAGlCoB,WAAWG,OAASD,OAGhBE,OAAS,EACTD,MAAQ,IACRC,OAASJ,WAAWG,MAAQ,IAAM,uBAGpCN,MAAMjB,KAAK,cAAewB,QAC5BL,cAAcG,IAAM,CAChBG,WAAYnB,MACZgB,GAAIA,GACJC,MAAOA,MACPC,OAAQA,eAKZE,QAAU,CACVC,WAAY,qCACZC,KAAM,CACFC,MAAOV,gBAIXW,KAAOC,cAAKC,KAAK,CAACN,UAAU,GAChCI,KAAKG,MAAK,SAAUC,UACZA,SAASC,QACTC,OAAOC,QAAQC,IAAI,sDACjB,sBAAsBC,QAExBH,OAAOC,QAAQC,IAAI,2BAA4BJ,SAASM,YAGhEV,KAAKW,MAAK,WACNL,OAAOC,QAAQC,IAAI,sBAEvBR,KAAKY,QAAO,WACR1B,QAAQE,KAAK,YAAY"}